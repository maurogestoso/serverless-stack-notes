service: serverless-stack

frameworkVersion: '>=1.28.0 <2.0.0'

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage, 'dev'}
  region: eu-west-2
  tags:
    projectName: ${self:provider}

custom:
  resourcePrefix: ${self:service}-${self:provider.stage}

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  hello:
    handler: bin/hello
    events:
      - http:
          path: hello
          method: get
  world:
    handler: bin/world
    events:
      - http:
          path: world
          method: get

resources:
  Resources:
    UploadsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.resourcePrefix}-uploads
        CorsConfiguration: 
          CorsRules:
            - 
              AllowedHeaders: ['*']
              AllowedMethods: [GET, PUT, POST, HEAD, DELETE]
              AllowedOrigins: ['*']
              MaxAge: 3000
        Tags: 
          - 
            Key: projectName
            Value: ${self:service}
    NotesTable:
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: ${self:custom.resourcePrefix}-notes
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions: 
          - 
            AttributeName: userId
            AttributeType: S
          - 
            AttributeName: noteId
            AttributeType: S
        KeySchema: 
          - 
            AttributeName: userId
            KeyType: HASH
          - 
            AttributeName: noteId
            KeyType: RANGE
        Tags: 
          - 
            Key: projectName
            Value: ${self:service}